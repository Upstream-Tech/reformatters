name: Deploy Operational Updates

on:
  push:
    branches: [ main ]

# Prevent concurrent runs since this is deploying to the K8S cluster
concurrency: 
  group: "deploy"
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: "${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}"

jobs:
  deploy:
    name: Deploy
    runs-on: depot-ubuntu-24.04
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      
      - id: gcp-auth
        name: "Get GCP Auth Token"
        uses: "google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f" # v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          credentials_file: "true"
            
      - name: "Set up gcloud"
        uses: "google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a" # v2
  
      - run: gcloud --quiet auth configure-docker

      - name: Install the project
        run: uv sync --all-extras --dev 

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - uses: google-github-actions/get-gke-credentials@9025e8f90f2d8e0c3dafc3128cc705a26d992a6a # v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_LOCATION }}

      - name: Set up Depot CLI
        uses: depot/setup-action@v1
        with:
          oidc: true

      - uses: depot/build-push-action@v1
        with:
          project: ${{ secrets.DEPOT_PROJECT }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAG }}
          context: .
          file: deploy/Dockerfile

      - name: Deploy
        run: uv run main deploy-operational-updates --docker-image ${{ env.IMAGE_TAG }}
